datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                String             @id @default(auto()) @map("_id") @db.ObjectId
  lineUserId        String             @unique
  name              String
  nickname          String
  department        String
  employeeNumber    String?
  role              String
  profilePictureUrl String?
  createdAt         DateTime           @default(now())
  leaveRequests     LeaveRequest[]
  overtimeRequests  OvertimeRequest[]
  checkIns          CheckIn[]
}

model LeaveRequest {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  userId        String
  user          User       @relation(fields: [userId], references: [id])
  leaveType     String
  leaveFormat   String
  reason        String
  startDate     DateTime
  endDate       DateTime
  status        String
  fullDayCount  Float
  approverId    String?
  denialReason  String?
  resubmitted      Boolean  @default(false)
  originalRequestId String?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}

model OvertimeRequest {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  date      DateTime
  hours     Int
  reason    String
  status    String
  createdAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id])
}

enum CheckInType {
  IN
  OUT
  CHECKPOINT
}

model CheckIn {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  userId    String     @db.ObjectId
  user      User       @relation(fields: [userId], references: [id])
  timestamp DateTime   @default(now())
  latitude  Float?
  longitude Float?
  location  String?
  method    String     // "GPS", "QR", or "MANUAL"
  type      CheckInType
  checkpointName String?
}

model Holiday {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  date        DateTime
  description String
  createdAt   DateTime @default(now())
}
